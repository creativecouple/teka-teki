%!PS-Adobe-3.0 EPSF-3.0
%%Pages: 1
%%BoundingBox: 0 0 100 97
%%CropBox: 0 0 100 97
%%DocumentData: Clean7Bit
%%Page: 1 1
%%EndComments
%----------------------------------------------
% This file is in Standard Puzzle Format (SPF)
%----------------------------------------------
/pgsave save def 200 dict begin
/sc 22.8 def
/pt {sc div} def
sc dup scale 0.8 pt dup translate
/duenn { 0.4 pt setlinewidth } def
/dick { 1.6 pt setlinewidth } def

<<
/format 2
/type (fillomino)
/sol false
/author ()
/edge [
[ 0 1 false ]
[ 1 2 false ]
[ 2 3 false ]
[ 3 4 false ]
[ 4 5 false ]
[ 5 0 false ]
[ 6 7 false ]
[ 7 8 false ]
[ 8 9 false ]
[ 9 2 false ]
[ 1 6 false ]
[ 3 10 false ]
[ 10 11 false ]
[ 11 12 false ]
[ 12 13 false ]
[ 13 4 false ]
[ 9 14 false ]
[ 14 15 false ]
[ 15 10 false ]
[ 8 16 false ]
[ 16 17 false ]
[ 17 18 false ]
[ 18 14 false ]
[ 15 19 false ]
[ 19 20 false ]
[ 20 21 false ]
[ 21 11 false ]
[ 18 22 false ]
[ 22 23 false ]
[ 23 19 false ] ]
/area [
[ 1.3856 0.8 2 0 2 ]
[ 2.7712 0.8 -1 0 3 ]
[ 0.6928 2 -1 0 2 ]
[ 2.0784 2 3 0 3 ]
[ 3.464 2 2 0 2 ]
[ 1.3856 3.2 -1 0 3 ]
[ 2.7712 3.2 -1 0 2 ] ]
/style [
[ 1 0 0 1 0 0 ] ]
/node [
[ 1.3856 0 ]
[ 2.0784 0.4 ]
[ 2.0784 1.2 ]
[ 1.3856 1.6 ]
[ 0.6928 1.2 ]
[ 0.6928 0.4 ]
[ 2.7712 0 ]
[ 3.464 0.4 ]
[ 3.464 1.2 ]
[ 2.7712 1.6 ]
[ 1.3856 2.4 ]
[ 0.6928 2.8 ]
[ 0 2.4 ]
[ 0 1.6 ]
[ 2.7712 2.4 ]
[ 2.0784 2.8 ]
[ 4.1568 1.6 ]
[ 4.1568 2.4 ]
[ 3.464 2.8 ]
[ 2.0784 3.6 ]
[ 1.3856 4 ]
[ 0.6928 3.6 ]
[ 3.464 3.6 ]
[ 2.7712 4 ] ]
/area_outline [
[ 6 0 1 2 3 4 5 ]
[ 6 6 7 8 9 1 10 ]
[ 6 3 11 12 13 14 15 ]
[ 6 9 16 17 18 11 2 ]
[ 6 19 20 21 22 16 8 ]
[ 6 18 23 24 25 26 12 ]
[ 6 22 27 28 29 23 17 ] ]
>> currentdict copy pop

/e { exch def } bind def
/l { 4 2 roll moveto lineto stroke } def
/c { dup 4 2 roll moveto
     stringwidth pop 2 div neg 0.5 add 0.25 rmoveto show } def

0.09 0.09 translate

format 1 eq {
  1 setgray
  0 0 X Y rectfill
  0 setgray

  0 1 X { /x e
    0 1 Y { /y e
      puzzle Y y sub 2 mul get x 2 mul get (+) 0 get eq {
        x y 0.09 0 360 arc fill
      } if
    } for
  } for

  ( ) 0 get /h1 e
  0 1 X { /x e
    0 1 Y 1 sub { /y e
      puzzle Y y sub 1 sub 2 mul 1 add get x 2 mul get /h e
      sol { solution Y y sub 1 sub 2 mul 1 add get x 2 mul get /h1 e } if
      sol h1 (|) 0 get eq and { (H) 0 get /h e } if
      h (|) 0 get eq {
        gsave
          0.02 setlinewidth [0.05 0.2] 0.01 setdash
          x y x y 1 add l
        grestore
      } if
      h (H) 0 get eq {
        dick
        x y x y 1 add l
      } if
    } for
  } for

  0 1 X 1 sub { /x e
    0 1 Y { /y e
      puzzle Y y sub 2 mul get x 2 mul 1 add get /h e
      sol { solution Y y sub 2 mul get x 2 mul 1 add get /h1 e } if
      sol h1 (-) 0 get eq and { (=) 0 get /h e } if
      h (-) 0 get eq {
        gsave
          0.02 setlinewidth [0.05 0.2] 0.01 setdash
          x y x 1 add y l
        grestore
      } if
      h (=) 0 get eq {
        dick
        x y x 1 add y l
      } if
    } for
  } for

  /Helvetica findfont 18 pt scalefont setfont
  0 1 X 1 sub { /x e
    0 1 Y 1 sub { /y e
      puzzle Y y sub 1 sub 2 mul 1 add get x 2 mul 1 add get /h e
      h 48 ge h 57 le and {
        x y h 48 sub 5 string cvs c
      } if
    } for
  } for

  1 1 X 1 sub { /x e
    1 1 Y 1 sub { /y e
      puzzle Y y sub 2 mul get x 2 mul get /h e
      h 48 ge h 57 le and {
        gsave
        x 1 sub y 1 sub translate
        2 2 scale
        0 0 h 48 sub 5 string cvs c
        grestore
      } if
    } for
  } for
} if

format 2 eq {
  0 1 node length 1 sub { /k e
    node k get 0 get /x e
    node k get 1 get /y e
    x y 0.09 0 360 arc fill
  } for

  0 1 edge length 1 sub { /k e
    edge k get 0 get /e1 e
    edge k get 1 get /e2 e
    sol edge k get 2 get and {
      dick
      node e1 get 0 get node e1 get 1 get moveto
      node e2 get 0 get node e2 get 1 get lineto
      stroke
    } {
      gsave
        0.02 setlinewidth [0.05 0.2] 0.01 setdash
        node e1 get 0 get node e1 get 1 get moveto
        node e2 get 0 get node e2 get 1 get lineto
        stroke
      grestore
    } ifelse
  } for

  /Helvetica findfont 18 pt scalefont setfont
  0 1 area length 1 sub { /k e
    area k get 0 get /x e
    area k get 1 get /y e
    area k get 2 get /nr e
    area k get 3 get /s e
    nr -1 ne {
      gsave
        x y translate
        style s get concat
        nr 5 string cvs /c e
        c stringwidth pop 2 div neg -6.5 pt moveto c show
      grestore
    } if
  } for
} if

end pgsave restore showpage
%%EOF
