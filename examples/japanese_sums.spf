%!PS-Adobe-3.0 EPSF-3.0
%%Pages: 1
%%BoundingBox: 0 0 139 138
%%CropBox: 0 0 139 138
%%DocumentData: Clean7Bit
%%Page: 1 1
%%EndComments
%----------------------------------------------
% This file is in Standard Puzzle Format (SPF)
%----------------------------------------------
/pgsave save def 200 dict begin
/sc 22.8 def
/pt {sc div} def
sc dup scale 0.8 pt dup translate
/duenn { 0.4 pt setlinewidth } def
/dick { 1.6 pt setlinewidth } def

<<
/type (japanese_sums)
/sol false
/X 4
/Y 4
/max 3
/left 2
/top 2
/puzzle [
(          4 ?)
(      5 ? 2 1)
(    +--------)
(    | . 2 . .)
(   4| . . . .)
( 5 ?| . . # .)
(    | . . . .) ]
/solution [
(#213)
(#13#)
(23#1)
(3#2#) ]
>> currentdict copy pop

/e { exch def } bind def
/l { 4 2 roll moveto lineto stroke } def
/c { dup 4 2 roll moveto 
     stringwidth pop 2 div neg 0.5 add 0.25 rmoveto show } def


gsave
left 0 translate

1 setgray
0 0 X Y rectfill
0 setgray

2 setlinecap

dick
0 0 X Y rectstroke

duenn 
0 1 X { /i e i 0 i Y l } for
0 1 Y { /j e 0 j X j l } for

/Helvetica findfont 0.65 scalefont setfont

0 1 left 1 sub { /i e
  0 1 Y 1 sub { /j e
    puzzle Y j sub top add get i 2 mul get /h1 e
    puzzle Y j sub top add get i 2 mul 1 add get /h2 e
    h2 ( ) 0 get ne h2 (?) 0 get ne and {
      h1 ( ) 0 get eq { 48 /h1 e } if
      i left sub j h1 48 sub 10 mul h2 48 sub add 5 string cvs c
    } if
    h2 (?) 0 get eq {
      i left sub j (?) c
    } if
  } for
} for

0 1 X 1 sub { /i e
  0 1 top 1 sub { /j e
    puzzle top j sub 1 sub get i left add 2 mul 1 add get /h1 e
    puzzle top j sub 1 sub get i left add 2 mul 2 add get /h2 e
    h2 ( ) 0 get ne h2 (?) 0 get ne and {
      h1 ( ) 0 get eq { 48 /h1 e } if
      i j Y add h1 48 sub 10 mul h2 48 sub add 5 string cvs c
    } if
    h2 (?) 0 get eq {
      i j Y add (?) c
    } if
  } for
} for

0 1 X 1 sub { /i e
  0 1 Y 1 sub { /j e
    sol {
      32 /h1 e
      solution Y j sub 1 sub get i get /h2 e
    } {
      puzzle Y j sub top add get i left add 2 mul 1 add get /h1 e
      puzzle Y j sub top add get i left add 2 mul 2 add get /h2 e
    } ifelse
    h2 ( ) 0 get ne h2 (.) 0 get ne and {
      h2 (#) 0 get eq {
        i j 1 1 rectfill
      } {
        h1 ( ) 0 get eq { 48 /h1 e } if
        i j h1 48 sub 10 mul h2 48 sub add 5 string cvs c
      } ifelse
    } if
  } for
} for

grestore

end pgsave restore showpage
%%EOF
