%!PS-Adobe-3.0 EPSF-3.0
%%Pages: 1
%%BoundingBox: 0 0 116 116
%%CropBox: 0 0 116 116
%%DocumentData: Clean7Bit
%%Page: 1 1
%%EndComments
%----------------------------------------------
% This file is in Standard Puzzle Format (SPF)
%----------------------------------------------
/pgsave save def 200 dict begin
/sc 22.8 def
/pt {sc div} def
sc dup scale 0.8 pt dup translate
/duenn { 0.4 pt setlinewidth } def
/dick { 1.6 pt setlinewidth } def

<<
/format 1
/type (masyu)
/sol false
/X 5
/Y 5
/puzzle [
(+-+-+-+-+-+)
(|  *   O  |)
(+ + + + + +)
(|       - |)
(+ + + + + +)
(|      #  |)
(+ + + + + +)
(|O        |)
(+ + + +|+ +)
(|         |)
(+-+-+-+-+-+) ]
/solution [
(+-+-+-+-+-+)
(|  *- -O- |)
(+ +|+ + +|+)
(|     - - |)
(+ +|+|+ + +)
(| -    # #|)
(+|+ +|+ + +)
(|O    -   |)
(+|+ + +|+ +)
(| - -O-   |)
(+-+-+-+-+-+) ]
>> currentdict copy pop

/e { exch def } bind def
/l { 4 2 roll moveto lineto stroke } def
/c { dup 4 2 roll moveto 
     stringwidth pop 2 div neg 0.5 add 0.25 rmoveto show } def

1 setgray
0 0 X Y rectfill
0 setgray

dick 
0 0 X Y rectstroke

duenn 
0 1 X { /i e i 0 i Y l } for
0 1 Y { /j e 0 j X j l } for

2 setlinecap
dick

0 1 X { /i e
  0 1 Y 1 sub { /j e
    sol {solution} {puzzle} ifelse Y j sub 1 sub 2 mul 1 add get i 2 mul get (-) 0 get eq {
      i 0.5 sub j 0.5 add i 0.5 add j 0.5 add l
    } if
  } for
} for

0 1 X 1 sub { /i e
  0 1 Y { /j e
    sol {solution} {puzzle} ifelse Y j sub 2 mul get i 2 mul 1 add get (|) 0 get eq {
      i 0.5 add j 0.5 sub i 0.5 add j 0.5 add l
    } if
  } for
} for
0 setgray

duenn
/Helvetica-Bold findfont 0.65 scalefont setfont
0 1 X 1 sub { /i e
  0 1 Y 1 sub { /j e
    puzzle Y j sub 1 sub 2 mul 1 add get i 2 mul 1 add get /h e
    h (*) 0 get eq {
      newpath i 0.5 add j 0.5 add 0.4 0 360 arc fill
    } if
    h (O) 0 get eq {
      newpath i 0.5 add j 0.5 add 0.4 0 360 arc stroke
    } if
    h (#) 0 get eq {
      i j 1 1 rectfill
    } if
  } for
} for

end pgsave restore showpage
%%EOF
